1. 인덱스에서 매칭 로딩 화면 gif 파일로 대체하는데 매칭 취소 버튼은 안만들기로 함
2. 인덱스에서 매칭 버튼 만듬
3. 

matchtimeover 하다가 말음
해야할거 
1. 체크된 유저가 들어간 룸 배열의 정보가 몇개 들어가있는지 체크해서 << 에서 안함  /  이건 그 이후 >> 그 유저들 위에 room 명령어로 한꺼번에 emit하기
>> 이거 이번주에 또 안함 해야댐


1. 클래스에 유저 정보를 넣고 원할때마다 꺼내서 (비교해서) 사용하려고 함
2. 근데 실사용할 수 있는 정보 변수는 다 newplayer, 또는 지역 변수  userpool, matchinguser 배열변수들 안에 있음
3. userroom 클래스에는 클라에서 받아온 정보 그 자체만 있지 분류되지않아서 .id 또는 .x .y 등을 뒤에 붙여서 써도 서버에서 못 알아먹음
4. 그럼 userroom 클래스에서 분류를 해놔야하지 않을까 ?
4-1. 아니면 userroom 클래스 안에 player 를 실행시키는 명령어를 넣어놓고 그걸 리턴받아 다시 클래스에서 그걸 리턴시켜줘야할까 ? > 이건 못함
>> 해결하다 말았음 > x y 값은 해결이 됐고 score부분만 따로 만들면 됨 > 나중에 라운드 처리하는 로직들어가면 자연스럽게 해결될거 같음
>> 우리가 io.on에서 원할 때 마다 꺼내서 사용해야하는 userroom에 있는 모든 정보는 결국 노가다로 저장해놓고 실행되는지부터 보기로 함


// 추후 삭제 예정    > 방안의 유저들에게 게임이 시작되었다고 전체전달
  socket.to(해당 플레이어의 속한 방).emit('join_user',{
    id: socket.id,
    x: newplayer.x,
    y: newplayer.y
join_user가 실행되는 시점은 매칭이 완료되어 처음 게임에 들어가는 시점이기 때문에 '잠시후 게임이 시작됩니다.'라는 메시지만 전달하면 될거같읍니다                
  });

JOIN(); / TO()이거 사용해서 방을 등록해야함

io.to(머시깽이)를 이용해서 그 방의 사람들에게만 전달
io.on('connection', (socket)=> {
        console.log("SOCKETIO connection EVENT: ", socket.id, " client connected");

        socket.on('joinRoom', function(msg) {     // joinRoom을 클라이언트가 emit 했을 시
            let roomName = msg;
            socket.join(roomName);    // 클라이언트를 msg에 적힌 room으로 참여 시킴
        });

        socket.on('chatting', function(msg) {       // 클라이언트가 채팅 내용을 보냈을 시  msg{roomName : 졸작방, msg : '안녕하세요'}
            // 전달한 roomName에 존재하는 소켓 전부에게 broadcast라는 이벤트 emit
            io.to(msg.roomName).emit('broadcast', msg.msg); 
        })
    })

// 근우의 고충
1. 각 클라이언트에서 자신의 업데이트 정보를 서버에 전달함
2. 근데 서버는 받아서 모든 클라이언트에게 뿌리기 때문에 게임중인 사람들한테도 정보가 감
3. 여기서 업데이트 정보를 받는것은 좋지만 항상 뿌려주는게 아니라 게임중인 사람들 내에서만 업데이트 정보를 뿌려줘야 하지않을까?
>> 로직변경으로 해결

//근우의 고충 = 상시 업데이트에 대한 내용
x,y 업데이트 하는 로직이 모두에게 > 특정 인물에게(같은 방에 있는 플레이어들) 전달하는 것으로 변경해야함