오늘 할일
1. roomcnt 전역변수를 매칭 room과 방만들어서 입장하는 room을 분리시킨 뒤 개별 처리 하기로 함
2. insertuserid로 입장하는 사람의 데이터를 넣어야함
3. 게임 전환 버그 수정


해결 방법 
1. 별도의 변수를 만들어 userroom 클래스를 분리시킨다(room,proom 배열) -> 이럴경우 matchstart와 roomout 처리 부분에서 두 배열을 다 체크하는 로직이 필요
2. 사용된 roomcnt를 방만드는 로직 처음에 체크하여 값이 없을 시 다시 사용하도록 처리한다 -> matchstart와 roomout 처리 부분에서 처음에 for문으로 roomcnt를 다 뒤져봐야함
2-1. 재사용을 하되, 방 개수를 제한시킨다. -> 방 개수의 최대값을 설정해 초과할 시 클라이언트에서 대기 메시지를 처리해야함
3. roomcnt 변수가 아닌 배열로 만들어 찾는건 인덱스로 찾고 배열 안 값은 ['m', 'p' 구분] 
 > 1. 매칭 > roomcnt ['m',]
 > 2. 사설 > roomcnt ['m', 'p'] > 1.매칭이 끝나거나 실패하면 'm' > null
 > 3. 매칭 > roomcnt ['m', 'p']
3번의 문제(?)점 = 결국 2번과 다를 것이 없다 / 결론
2번은 클래스 내부에 체크 변수가 있다 -> 1, 0 처럼 스위칭 형식이다
3번은 클래스 외부에 체크 변수가 있다 -> 그 배열변수는 무제한으로 늘어난다
 -> 체크용 변수를 먼저 체크하고 그다음에 안에 유저가 몇명있는지 , 방 코드가 들어가 있는지 체크를 하게 된다


2번 채택 땅땅땅
------------------------------------------------------------------------------------------------------------
오늘 한 일
1. 사설 방 입장 후 다른 유저가 매칭을 시작하면 사설 방에 입장 후 15초 뒤 게임으로 납치 - 클래스의 check 변수를 통해 해결
2. 2~5명의 유저가 매칭을 통해 게임 시작 후 다른 유저가 매칭을 시작하면 빈자리에 입장한 후 게임이 시작되지 않음 - 클래스의 check 변수를 통해 해결

3. 심각한 오류 - 유저 방을 재사용하는 과정에서 재사용할 방의 값을 초기화 시켜서 새로 만들어진 방과 똑같은 조건으로 만들어줬지만
매칭으로 들어오는 유저는 재사용하는 방에 들어가지 않고 새로만들어진 방에 들어가는 문제
3-1. joinroom 메시지로 방 join과 insertuserid가 if문으로 입력된 roomid와 만들어진 방의 roomCode를 비교하는 과정에서 false가 나오는 문제
그래서 join은 안됐지만 insertuserid는 정상적으로 들어갔다 
3-2. express.static으로 경로 지정한 후 add.get으로 res.sendflie 하는거 테스트 안해봄

다음 할 일
1. joinuser로 게임 데이터 전송 -> 화면에 출력이 되지 않는 문제
2. joinroom 메시지에서 조건문으로 방코드를 비교하지 못하는 문제 해결해야됌
3. 매칭 중 취소 버튼 클릭 후 상황 - 데이터뺴기는 해결 -> 클라쪽으로 메시지 보내서 메인화면으로 돌아가게끔 해야됌
4. 닉네임 처리 추후 결과 보고 개발
5. 재활용해야하는 방을 새로 만들어진 방과 조건이 똑같이 했음에도 재활용되지 않는 문제 해결 해야됌


