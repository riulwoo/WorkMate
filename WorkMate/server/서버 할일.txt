처리할 목록
1. 서버와 클라이언트 접속관리  완료
2. 매칭 시스템 관리 (방을 만들어서 유저 추가) 진행중
  2-1. 
  2-2. 
3. 매칭이 된 유저들에게 게임 시작
4. 라운드별 결과 정리 (탈락 플레이어에게 결과 페이지 전환) 4라운드 까지
5. 1위 플레이어에게 승점 페이지 전환


대충 세부사항
1. 클라에서 보낸 정보 값을 받아와 유저풀을 생성하여 넣는다.
	2.다른 유저풀을 생성한다
3-1. 시간제한함수를 만들고 시간이 끝났을 경우에
    유저풀에 있는 배열 길이를 확인해 2~5명일 경우
    그 유저의 클라에 게임시작 메시지를 보낸 후  랜덤 게임 클라의 화면으로   전환 시킨다
	3-2. 만약 유저풀의 길이가 ~1명일 경우
        매칭 실패 체크변수를 클라에 보내고 해당 유저풀을 삭제한다
3-3.시간제한안에 유저풀의 길이가 6이 될경우 시간제한 함수를 종료,
      클라에 게임시작 메시지를 보낸 후 랜덤 게임 클라 화면으로 전환 시킨다

매칭 시작 버튼을 누르면 일정 시간 매칭대기하며 특정 인원이 모이면 게임이 시작된다.
게임은 총 4라운드로 진행되며 매 라운드마다 간단한 미니게임으로 진행된다.
모든 라운드 마다 사용자는 점수를 얻을 수 있으며 이 점수로 순위가 결정된다.
4라운드가 종료되면 최종 순위 결과를 볼 수 있으며 우승자를 알 수 있다.

// 여유 있으면 6명이 되자마자 matchsuccess넘겨주기

게임 내의 유저들끼리 좌표를 공유할수 있게끔 해야함
지금의 방식은 모든 유저에게 자신의 정보를 전달하기 때문에 약간 어질쓰

졸작 범위 + 세부 설계 검토
9~10주차 중간 발표 진행사항 보고
발표 및 수정사항 논의
9주차 A팀 발표


매칭 결과처리 닉네임 
1 60 2 50 3 20 4 100 5 20 6 50
오브젝트 nick : asd score 123

게임마다 서버가 처리해줘야 하는 로직이 따로있음
(나중에 시간되면 해보는 걸로)슈팅 + 밀쳐내기 : 
                    1. 탄막이 오는거에 플레이어 충돌
                    2. 밀쳐내기 버튼을 눌렀을 때 메시지
		                3. 밀쳐내기 효과가 나타날때 그 범위에 플레이어 좌표 충돌
		                4. 밀려나는 좌표 범위
O/X 퀴즈 : 

레이싱 게임 : 

뒤집기 : 1인칭 고정 시점
        1. 모든 카드는 배열로 선언 되며 기본 값은 검정 
        2. 버튼을 누른 사람이 있다면 그 좌표 값을 확인해 색깔을 유저색으로 변경하고
          변경된 배열 값을 모든 유저에게 보낸다
        3. 총 맵의 크기는 7x7개의 배열 카드
        4. 각각의 유저들은 서버로부터 뒤집힌 카드들의 색과 유저들의 위치를 전송받음
        5. 시간제한은 60 초
        6. 시간이 다 되면 모든 배열의 색깔을 계산해서 색깔 수 별로 해당 유저들의 
          뒤집은 카드 수 1개당 1점으로 스코어 정산

매칭하기 / 방만들기
방만들기
> 방 페이지 작성
> DB연결
> 랜덤 코드 생성
> 코드 입력하여 들어온 사람 페이지에 추가하여 refresh
> 
매칭하기 / 방만들기 둘다 방 코드를 생성해서 userroom 객체의 방코드 변수에 저장(DB의 roomid)
매칭하기는 매칭 로직으로 게임시작 처리
방만들기는 제한시간이 아닌 따로 메시지를 받아 게임시작 처리
둘다 랜덤 코드가 같은 사람들끼리 게임시작 하도록 처리

document.elementId('nickname')으로 가져와서 DB에 넣기

DB 설계 (초기)
socketid varchar2(40)
roomid varchar2(10)
nickname varchar2(30)

